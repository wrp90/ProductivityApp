{"ast":null,"code":"var _jsxFileName = \"/Users/doraorozco/Class_Stuff/ProductivityApp/client/src/pages/Reminders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/remindersAPI\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reminders() {\n  _s();\n\n  const [reminders, setReminders] = useState([]);\n  const [formObject, setFormObject] = useState({});\n  useEffect(() => {\n    loadReminders();\n  }, []);\n\n  function loadReminders() {\n    API.getReminders().then(res => setReminders(res.data)).catch(err => console.log(err));\n  }\n\n  ;\n\n  function deleteReminder(id) {\n    API.deleteReminder(id).then(res => loadReminders()).catch(err => console.log(err));\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormObject({ ...formObject,\n      [name]: value\n    });\n  }\n\n  ;\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title && formObject.text) {\n      API.saveReminder({\n        title: formObject.title,\n        text: formObject.text\n      }).then(res => loadReminders()).catch(err => console.log(err));\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-9\",\n        children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Saved Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), reminders.length ? /*#__PURE__*/_jsxDEV(List, {\n          children: reminders.map(reminder => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/reminders/\" + reminder._id,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: reminder.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n              onClick: () => deleteReminder(reminder._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)]\n          }, reminder._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Results to Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Reminders, \"I9oEye1/7JS4TbrS2/fgYMUjW0c=\");\n\n_c = Reminders;\nexport default Reminders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"sources":["/Users/doraorozco/Class_Stuff/ProductivityApp/client/src/pages/Reminders.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Reminders","reminders","setReminders","formObject","setFormObject","loadReminders","getReminders","then","res","data","catch","err","console","log","deleteReminder","id","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","title","text","saveReminder","length","map","reminder","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/remindersAPI\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Reminders() {\n  const [reminders, setReminders] = useState([])\n  const [formObject, setFormObject] = useState({})\n  \n  useEffect(() => {\n    loadReminders()\n  }, [])\n\n  function loadReminders() {\n    API.getReminders()\n      .then(res => \n        setReminders(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n  function deleteReminder(id) {\n    API.deleteReminder(id)\n      .then(res => loadReminders())\n      .catch(err => console.log(err));\n  }\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title && formObject.text) {\n      API.saveReminder({\n        title: formObject.title,\n        text: formObject.text\n      })\n        .then(res => loadReminders())\n        .catch(err => console.log(err));\n    }\n  };\n\n    return (\n      <Container fluid>\n        <Row>\n        <Col size=\"md-9\">\n            <Jumbotron>\n              <h1>Saved Reminders</h1>\n            </Jumbotron>\n            {reminders.length ? (\n              <List>\n                {reminders.map(reminder => (\n                  <ListItem key={reminder._id}>\n                    <Link to={\"/reminders/\" + reminder._id}>\n                      <strong>\n                        {reminder.title}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => deleteReminder(reminder._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\nexport default Reminders;"]},"metadata":{},"sourceType":"module"}