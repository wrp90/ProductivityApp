{"ast":null,"code":"var _jsxFileName = \"/Users/doraorozco/Class_Stuff/ProductivityApp/client/src/pages/Reminders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/remindersAPI\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reminders() {\n  _s();\n\n  const [reminders, setReminders] = useState([]);\n  const [formObject, setFormObject] = useState({});\n  useEffect(() => {\n    loadReminders();\n  }, []);\n\n  function loadReminders() {\n    API.getReminders().then(res => setReminders(res.data)).catch(err => console.log(err));\n  }\n\n  ;\n\n  function deleteReminder(id) {\n    API.deleteReminder(id).then(res => loadReminders()).catch(err => console.log(err));\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormObject({ ...formObject,\n      [name]: value\n    });\n  }\n\n  ;\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title && formObject.text) {\n      API.saveReminder({\n        title: formObject.title,\n        text: formObject.text\n      }).then(res => loadReminders()).catch(err => console.log(err));\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-3 sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            onChange: handleInputChange,\n            name: \"title\",\n            placeholder: \"Title (required)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            onChange: handleInputChange,\n            name: \"text\",\n            placeholder: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormBtn, {\n            disabled: !(formObject.text && formObject.title),\n            onClick: handleFormSubmit,\n            children: \"Submit Reminder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Reminders, \"I9oEye1/7JS4TbrS2/fgYMUjW0c=\");\n\n_c = Reminders;\nexport default Reminders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"sources":["/Users/doraorozco/Class_Stuff/ProductivityApp/client/src/pages/Reminders.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Reminders","reminders","setReminders","formObject","setFormObject","loadReminders","getReminders","then","res","data","catch","err","console","log","deleteReminder","id","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","title","text","saveReminder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/remindersAPI\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Reminders() {\n  const [reminders, setReminders] = useState([])\n  const [formObject, setFormObject] = useState({})\n  \n  useEffect(() => {\n    loadReminders()\n  }, [])\n\n  function loadReminders() {\n    API.getReminders()\n      .then(res => \n        setReminders(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n  function deleteReminder(id) {\n    API.deleteReminder(id)\n      .then(res => loadReminders())\n      .catch(err => console.log(err));\n  }\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title && formObject.text) {\n      API.saveReminder({\n        title: formObject.title,\n        text: formObject.text\n      })\n        .then(res => loadReminders())\n        .catch(err => console.log(err));\n    }\n  };\n\n    return (\n      <Container fluid>\n        <Row>\n\n          <Col size=\"md-3 sm-12\">\n            <Jumbotron>\n              <h1>Reminders</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                onChange={handleInputChange}\n                name=\"title\"\n                placeholder=\"Title (required)\"\n              />\n              <TextArea\n                onChange={handleInputChange}\n                name=\"text\"\n                placeholder=\"Text\"\n              />\n              <FormBtn\n                disabled={!(formObject.text && formObject.title)}\n                onClick={handleFormSubmit}\n              >\n                Submit Reminder\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\nexport default Reminders;"]},"metadata":{},"sourceType":"module"}